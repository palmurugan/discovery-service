server:
  port: 7074
spring:
  application:
    name: discovery-service
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    schema-registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      acks: all
      retries: 3
      properties:
        max.in.flight.requests.per.connection: 1
        enable.idempotence: true
        compression.type: snappy
    consumer:
      group-id: service-search-indexer
      auto-offset-reset: earliest
      enable-auto-commit: false
      max-poll-records: 500

kafka:
  topic:
    service-events: dev.provider.service.events
  consumer:
    group-id: service-search-indexer
event:
  publisher:
    enabled: true
opensearch:
  scheme: ${OPENSEARCH_SCHEME:http}
  host: ${OPENSEARCH_HOST:localhost}
  port: ${OPENSEARCH_PORT:9200}
  username: ${OPENSEARCH_USERNAME:admin}
  password: ${OPENSEARCH_PASSWORD:admin}

logging:
  level:
    com.serviq.discovery: DEBUG
    org.springframework.kafka: INFO
    org.apache.kafka: WARN
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always